@using Pati_Project.Controllers;
@using Pati_Project.Models;
@{
    ViewBag.Title = "Index";
}
@model Pati_Project.Models.staff_project_allocation


<h2>Attach project to employee</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        @*<div class="form-group">
                @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                </div>
            </div>*@


        <div class="form-group">
            @Html.LabelFor(model => model.year, "Year", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                
                @Html.DropDownListFor(model => model.year, new SelectList(Enumerable.Range(DateTime.Now.Year, 10).ToList(), DateTime.Now.Year), "Select Year !!!")
                
                @*@Html.DropDownListFor(model => model.year, (SelectList)ViewBag.Years_list, "Select employee", new { @class = "form-control" })*@
                @Html.ValidationMessageFor(model => model.year, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.year, "Month", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                            @Html.DropDownListFor(model => model.month,
                            Enumerable.Range(1, 12).
                            Select(i => new SelectListItem
                            {
                                Value = i.ToString(),
                                Text = System.Globalization.CultureInfo.InvariantCulture.DateTimeFormat.GetMonthName(i),
                                Selected = (i==DateTime.Now.Month)
                            }),
                                "Select Month !!!" )
                @*@Html.DropDownListFor(model => model.month, new SelectList(Enumerable.Range(1,12).ToList(), DateTime.Now.Month), "-- Select month --")*@

                @*@Html.DropDownListFor(model => model.year, (SelectList)ViewBag.Years_list, "Select employee", new { @class = "form-control" })*@
                @Html.ValidationMessageFor(model => model.month, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.employee_id, "Employee", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.employee_id, (SelectList)ViewBag.Employees_list, "Select employee", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.employee_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.project1_id, "Project 1",htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.project1_id, new SelectList(ViewBag.Projects_list, "id", "name"), "Select project 1", new { @class = "form-control" })
                @*@Html.DropDownListFor(model => model.project1_id, (SelectList)ViewBag.Projects_list, "Select employee", new { @class = "form-control" })*@
                @Html.ValidationMessageFor(model => model.project1_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.project2_id, "Project 2", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.project2_id, new SelectList(ViewBag.Projects_list, "id", "name"), "Select project 2", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.project2_id, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.project1_percentage, "Project 1 Load [%]", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.project1_percentage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.project1_percentage, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Project 2 Load [%]", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextArea("project2_percentage", "", htmlAttributes: new { @class = "form-control" })


            </div>
        </div>




        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>



}

<span>Tutaj będą przyporządkowane projekty do pracowników</span>
<table id="projects_table">
    <thead>
        <tr>
            <th>ID</th>
            <th>Date</th>          
            <th>Employee</th>
            <th>Project 1</th>
            <th>Project 2</th>
        </tr>
    </thead>
    <tfoot>
        <tr>
            <th>ID</th>
            <th>Date</th>            
            <th>Employee</th>
            <th>Project 1</th>
            <th>Project 2</th>
        </tr>
    </tfoot>
    <tbody>
        @foreach (staff_project_allocation p in ViewBag.Staff_Project_Allocation_list)
        {
            <tr>
                <td>@p.id.ToString()</td>
                <td>@p.month.ToString()/@p.year.ToString()</td>
                <td>@Html.Action("find_employee", "Staff_Project_Allocation", new { id = p.employee_id })</td>




                @{


                    string x;
                    try { x = (Html.Action("find_company", "Staff_Project_Allocation", new { id = p.project1_id })).ToString(); }
                    catch
                    {
                        x = "Not attached";
                    }

                    if (x.ToString() == "1")
                    {
                        <td style="background-color:darkcyan; color:white">@Html.Action("find_project", "Staff_Project_Allocation", new { id = p.project1_id }) [@p.project1_percentage %]</td>
                    }
                    else if (x.ToString() == "2")
                    {
                        <td style="background-color:orange; color:white">@Html.Action("find_project", "Staff_Project_Allocation", new { id = p.project1_id }) [@p.project1_percentage %]</td>
                    }
                    else if (x.ToString() == "3")
                    {
                        <td style="background-color:green; color:white">@Html.Action("find_project", "Staff_Project_Allocation", new { id = p.project1_id }) [@p.project1_percentage %]</td>
                    }

                    else
                    {
                        <td>Not attached</td>
                    }

                }




                @*<td style="color:green">@Html.Action("find_project", "Staff_Project_Allocation", new { id = p.project1_id }) [@p.project1_percentage %]</td>*@

                @{
                    string x2;
                    try {  x2 = (Html.Action("find_company", "Staff_Project_Allocation", new { id = p.project2_id })).ToString(); }
                    catch
                    {
                         x2 = "Not attached";
                    }


                    if (x2.ToString() == "1")
                    {
                        <td style="background-color:darkcyan; color:white">@Html.Action("find_project", "Staff_Project_Allocation", new { id = p.project2_id }) [@(100 - p.project1_percentage) %]</td>
                    }
                    else if (x2.ToString() == "2")
                    {
                        <td style="background-color:orange; color:white">@Html.Action("find_project", "Staff_Project_Allocation", new { id = p.project2_id }) [@(100 - p.project1_percentage) %]</td>
                    }
                    else if (x2.ToString() == "3")
                    {
                        <td style="background-color:green; color:white">@Html.Action("find_project", "Staff_Project_Allocation", new { id = p.project2_id }) [@(100 - p.project1_percentage) %]</td>
                    }
                    else
                    {
                        <td>Not attached</td>
                    }
                }




                @*<td>@Html.Action("find_company", "Project", new { id = p.company_id })</td>*@
        </tr>
                    }
    </tbody>

</table>
<script>
    $(function () {
        $('.validation-summary-errors').each(function () {
            $(this).addClass('alert');
            $(this).addClass('alert-danger');
        });

        $('form').each(function () {
            $(this).find('div.form-group').each(function () {
                if ($(this).find('span.field-validation-error').length > 0) {
                    $(this).addClass('has-error');
                    $(this).find('span.field-validation-error').
                       removeClass('field-validation-error');
                }
            });
        });

    });
</script>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>